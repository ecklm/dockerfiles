worker_processes  1;
error_log stderr;

events {
	worker_connections  1024;
}

http {
	include       mime.types;
	default_type  application/octet-stream;

	sendfile on;

	keepalive_timeout  65;

	types_hash_max_size 4096;
	server_names_hash_bucket_size 128;

	# nginx may need to resolve domain names at run time
	resolver 8.8.8.8 8.8.4.4 ipv6=off;

	# Pacman Cache
	log_format  main  '$remote_addr - $remote_user "$request" '
					  '$status $body_bytes_sent host: $host "$http_referer" '
					  '"$http_user_agent" "$http_x_forwarded_for"';

	access_log /dev/stdout main;

	server
	{
		listen      80;
		server_name _;
		root        /pacman-cache;
		autoindex   on;

		# Requests for package db, signature files and files db should redirect
		# upstream without caching
		location ~ \.(db|sig|files)$ {
			proxy_pass http://mirrors/archlinux$request_uri;
		}

		# Requests for actual packages should be served directly from cache if
		# available.
		#   If not available, retrieve and save the package from an upstream
		#   mirror.
		location ~ \.tar\.xz$ {
			try_files $uri @pkg_mirror;
		}

		# Retrieve package from upstream mirrors and cache for future requests
		location @pkg_mirror {
			proxy_store    on;
			proxy_redirect off;
			proxy_store_access  user:rw group:rw all:r;
			proxy_next_upstream error timeout http_404;
			proxy_pass          http://mirrors/archlinux$request_uri;
		}
	}
	include mirrors.conf;
}

